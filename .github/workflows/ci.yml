name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  quality-gates:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine pytest coverage ruff mypy types-requests
        pip install -e .

    - name: Run linting (ruff)
      run: |
        ruff check src tests
        ruff format --check src tests

    - name: Run type checking (mypy)
      run: |
        mypy src

    - name: Run tests with coverage
      run: |
        python -m coverage run -m pytest tests/ -v
        python -m coverage report --show-missing
        python -m coverage html

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/

  devnet-integration:
    runs-on: ubuntu-latest
    needs: quality-gates
    services:
      accumulate-devnet:
        image: accumulate/accumulate:latest
        ports:
          - 26660:26660
        options: >-
          --health-cmd "curl -f http://localhost:26660/v2/query || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Wait for DevNet ready
      run: |
        timeout 120 bash -c 'until curl -f http://localhost:26660/v2/query; do sleep 2; done'

    - name: Run DevNet discovery
      run: |
        python tool/devnet_discovery.py

    - name: Run integration examples
      run: |
        python examples/100_keygen_lite_urls.py
        # Skip examples with Unicode issues on CI
        # python examples/120_faucet_local_devnet.py
        # python examples/999_zero_to_hero.py

  build-and-validate:
    runs-on: ubuntu-latest
    needs: quality-gates

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Clean build environment
      run: |
        rm -rf build/ dist/ src/*.egg-info

    - name: Build distributions
      run: |
        python -m build

    - name: Validate with twine
      run: |
        twine check dist/*

    - name: Upload distributions
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

  publish-testpypi:
    runs-on: ubuntu-latest
    needs: [quality-gates, build-and-validate]
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        skip-existing: true

  publish-pypi:
    runs-on: ubuntu-latest
    needs: [quality-gates, build-and-validate]
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}