# AUTOGENERATED â€“ DO NOT EDIT
from __future__ import annotations
from pydantic import BaseModel
from typing import Optional, List, Union, Any
from datetime import datetime

from .enums import *
from .types import *
from .signatures import Signature
from .runtime.url import AccountUrl

class TxHeaderBase(BaseModel):
    """Base class for transaction headers"""
    pass

class SyntheticCreateIdentityHeader(TxHeaderBase):
    """Header for SyntheticCreateIdentity transaction"""

class SyntheticWriteDataHeader(TxHeaderBase):
    """Header for SyntheticWriteData transaction"""

class SyntheticDepositTokensHeader(TxHeaderBase):
    """Header for SyntheticDepositTokens transaction"""

class SyntheticDepositCreditsHeader(TxHeaderBase):
    """Header for SyntheticDepositCredits transaction"""

class SyntheticBurnTokensHeader(TxHeaderBase):
    """Header for SyntheticBurnTokens transaction"""

class SyntheticForwardTransactionHeader(TxHeaderBase):
    """Header for SyntheticForwardTransaction transaction"""

class SystemGenesisHeader(TxHeaderBase):
    """Header for SystemGenesis transaction"""

class BlockValidatorAnchorHeader(TxHeaderBase):
    """Header for BlockValidatorAnchor transaction"""

class DirectoryAnchorHeader(TxHeaderBase):
    """Header for DirectoryAnchor transaction"""

class SystemWriteDataHeader(TxHeaderBase):
    """Header for SystemWriteData transaction"""

class CreateIdentityHeader(TxHeaderBase):
    """Header for CreateIdentity transaction"""

class CreateTokenAccountHeader(TxHeaderBase):
    """Header for CreateTokenAccount transaction"""

class SendTokensHeader(TxHeaderBase):
    """Header for SendTokens transaction"""

class CreateDataAccountHeader(TxHeaderBase):
    """Header for CreateDataAccount transaction"""

class WriteDataHeader(TxHeaderBase):
    """Header for WriteData transaction"""

class WriteDataToHeader(TxHeaderBase):
    """Header for WriteDataTo transaction"""

class AcmeFaucetHeader(TxHeaderBase):
    """Header for AcmeFaucet transaction"""

class CreateTokenHeader(TxHeaderBase):
    """Header for CreateToken transaction"""

class IssueTokensHeader(TxHeaderBase):
    """Header for IssueTokens transaction"""

class BurnTokensHeader(TxHeaderBase):
    """Header for BurnTokens transaction"""

class CreateLiteTokenAccountHeader(TxHeaderBase):
    """Header for CreateLiteTokenAccount transaction"""

class CreateKeyPageHeader(TxHeaderBase):
    """Header for CreateKeyPage transaction"""

class CreateKeyBookHeader(TxHeaderBase):
    """Header for CreateKeyBook transaction"""

class AddCreditsHeader(TxHeaderBase):
    """Header for AddCredits transaction"""

class BurnCreditsHeader(TxHeaderBase):
    """Header for BurnCredits transaction"""

class TransferCreditsHeader(TxHeaderBase):
    """Header for TransferCredits transaction"""

class UpdateKeyPageHeader(TxHeaderBase):
    """Header for UpdateKeyPage transaction"""

class LockAccountHeader(TxHeaderBase):
    """Header for LockAccount transaction"""

class UpdateAccountAuthHeader(TxHeaderBase):
    """Header for UpdateAccountAuth transaction"""

class UpdateKeyHeader(TxHeaderBase):
    """Header for UpdateKey transaction"""

class NetworkMaintenanceHeader(TxHeaderBase):
    """Header for NetworkMaintenance transaction"""

class ActivateProtocolVersionHeader(TxHeaderBase):
    """Header for ActivateProtocolVersion transaction"""

class RemoteTransactionHeader(TxHeaderBase):
    """Header for RemoteTransaction transaction"""


class SyntheticCreateIdentityBody(BaseModel):
    """Body for SyntheticCreateIdentity transaction"""

class SyntheticCreateIdentity(BaseModel):
    """Transaction: SyntheticCreateIdentity"""
    header: SyntheticCreateIdentityHeader
    body: SyntheticCreateIdentityBody

class SyntheticWriteDataBody(BaseModel):
    """Body for SyntheticWriteData transaction"""

class SyntheticWriteData(BaseModel):
    """Transaction: SyntheticWriteData"""
    header: SyntheticWriteDataHeader
    body: SyntheticWriteDataBody

class SyntheticDepositTokensBody(BaseModel):
    """Body for SyntheticDepositTokens transaction"""

class SyntheticDepositTokens(BaseModel):
    """Transaction: SyntheticDepositTokens"""
    header: SyntheticDepositTokensHeader
    body: SyntheticDepositTokensBody

class SyntheticDepositCreditsBody(BaseModel):
    """Body for SyntheticDepositCredits transaction"""

class SyntheticDepositCredits(BaseModel):
    """Transaction: SyntheticDepositCredits"""
    header: SyntheticDepositCreditsHeader
    body: SyntheticDepositCreditsBody

class SyntheticBurnTokensBody(BaseModel):
    """Body for SyntheticBurnTokens transaction"""

class SyntheticBurnTokens(BaseModel):
    """Transaction: SyntheticBurnTokens"""
    header: SyntheticBurnTokensHeader
    body: SyntheticBurnTokensBody

class SyntheticForwardTransactionBody(BaseModel):
    """Body for SyntheticForwardTransaction transaction"""

class SyntheticForwardTransaction(BaseModel):
    """Transaction: SyntheticForwardTransaction"""
    header: SyntheticForwardTransactionHeader
    body: SyntheticForwardTransactionBody

class SystemGenesisBody(BaseModel):
    """Body for SystemGenesis transaction"""

class SystemGenesis(BaseModel):
    """Transaction: SystemGenesis"""
    header: SystemGenesisHeader
    body: SystemGenesisBody

class BlockValidatorAnchorBody(BaseModel):
    """Body for BlockValidatorAnchor transaction"""

class BlockValidatorAnchor(BaseModel):
    """Transaction: BlockValidatorAnchor"""
    header: BlockValidatorAnchorHeader
    body: BlockValidatorAnchorBody

class DirectoryAnchorBody(BaseModel):
    """Body for DirectoryAnchor transaction"""

class DirectoryAnchor(BaseModel):
    """Transaction: DirectoryAnchor"""
    header: DirectoryAnchorHeader
    body: DirectoryAnchorBody

class SystemWriteDataBody(BaseModel):
    """Body for SystemWriteData transaction"""

class SystemWriteData(BaseModel):
    """Transaction: SystemWriteData"""
    header: SystemWriteDataHeader
    body: SystemWriteDataBody

class CreateIdentityBody(BaseModel):
    """Body for CreateIdentity transaction"""

class CreateIdentity(BaseModel):
    """Transaction: CreateIdentity"""
    header: CreateIdentityHeader
    body: CreateIdentityBody

class CreateTokenAccountBody(BaseModel):
    """Body for CreateTokenAccount transaction"""

class CreateTokenAccount(BaseModel):
    """Transaction: CreateTokenAccount"""
    header: CreateTokenAccountHeader
    body: CreateTokenAccountBody

class SendTokensBody(BaseModel):
    """Body for SendTokens transaction"""

class SendTokens(BaseModel):
    """Transaction: SendTokens"""
    header: SendTokensHeader
    body: SendTokensBody

class CreateDataAccountBody(BaseModel):
    """Body for CreateDataAccount transaction"""

class CreateDataAccount(BaseModel):
    """Transaction: CreateDataAccount"""
    header: CreateDataAccountHeader
    body: CreateDataAccountBody

class WriteDataBody(BaseModel):
    """Body for WriteData transaction"""

class WriteData(BaseModel):
    """Transaction: WriteData"""
    header: WriteDataHeader
    body: WriteDataBody

class WriteDataToBody(BaseModel):
    """Body for WriteDataTo transaction"""

class WriteDataTo(BaseModel):
    """Transaction: WriteDataTo"""
    header: WriteDataToHeader
    body: WriteDataToBody

class AcmeFaucetBody(BaseModel):
    """Body for AcmeFaucet transaction"""

class AcmeFaucet(BaseModel):
    """Transaction: AcmeFaucet"""
    header: AcmeFaucetHeader
    body: AcmeFaucetBody

class CreateTokenBody(BaseModel):
    """Body for CreateToken transaction"""

class CreateToken(BaseModel):
    """Transaction: CreateToken"""
    header: CreateTokenHeader
    body: CreateTokenBody

class IssueTokensBody(BaseModel):
    """Body for IssueTokens transaction"""

class IssueTokens(BaseModel):
    """Transaction: IssueTokens"""
    header: IssueTokensHeader
    body: IssueTokensBody

class BurnTokensBody(BaseModel):
    """Body for BurnTokens transaction"""

class BurnTokens(BaseModel):
    """Transaction: BurnTokens"""
    header: BurnTokensHeader
    body: BurnTokensBody

class CreateLiteTokenAccountBody(BaseModel):
    """Body for CreateLiteTokenAccount transaction"""

class CreateLiteTokenAccount(BaseModel):
    """Transaction: CreateLiteTokenAccount"""
    header: CreateLiteTokenAccountHeader
    body: CreateLiteTokenAccountBody

class CreateKeyPageBody(BaseModel):
    """Body for CreateKeyPage transaction"""

class CreateKeyPage(BaseModel):
    """Transaction: CreateKeyPage"""
    header: CreateKeyPageHeader
    body: CreateKeyPageBody

class CreateKeyBookBody(BaseModel):
    """Body for CreateKeyBook transaction"""

class CreateKeyBook(BaseModel):
    """Transaction: CreateKeyBook"""
    header: CreateKeyBookHeader
    body: CreateKeyBookBody

class AddCreditsBody(BaseModel):
    """Body for AddCredits transaction"""

class AddCredits(BaseModel):
    """Transaction: AddCredits"""
    header: AddCreditsHeader
    body: AddCreditsBody

class BurnCreditsBody(BaseModel):
    """Body for BurnCredits transaction"""

class BurnCredits(BaseModel):
    """Transaction: BurnCredits"""
    header: BurnCreditsHeader
    body: BurnCreditsBody

class TransferCreditsBody(BaseModel):
    """Body for TransferCredits transaction"""

class TransferCredits(BaseModel):
    """Transaction: TransferCredits"""
    header: TransferCreditsHeader
    body: TransferCreditsBody

class UpdateKeyPageBody(BaseModel):
    """Body for UpdateKeyPage transaction"""

class UpdateKeyPage(BaseModel):
    """Transaction: UpdateKeyPage"""
    header: UpdateKeyPageHeader
    body: UpdateKeyPageBody

class LockAccountBody(BaseModel):
    """Body for LockAccount transaction"""

class LockAccount(BaseModel):
    """Transaction: LockAccount"""
    header: LockAccountHeader
    body: LockAccountBody

class UpdateAccountAuthBody(BaseModel):
    """Body for UpdateAccountAuth transaction"""

class UpdateAccountAuth(BaseModel):
    """Transaction: UpdateAccountAuth"""
    header: UpdateAccountAuthHeader
    body: UpdateAccountAuthBody

class UpdateKeyBody(BaseModel):
    """Body for UpdateKey transaction"""

class UpdateKey(BaseModel):
    """Transaction: UpdateKey"""
    header: UpdateKeyHeader
    body: UpdateKeyBody

class NetworkMaintenanceBody(BaseModel):
    """Body for NetworkMaintenance transaction"""

class NetworkMaintenance(BaseModel):
    """Transaction: NetworkMaintenance"""
    header: NetworkMaintenanceHeader
    body: NetworkMaintenanceBody

class ActivateProtocolVersionBody(BaseModel):
    """Body for ActivateProtocolVersion transaction"""

class ActivateProtocolVersion(BaseModel):
    """Transaction: ActivateProtocolVersion"""
    header: ActivateProtocolVersionHeader
    body: ActivateProtocolVersionBody

class RemoteTransactionBody(BaseModel):
    """Body for RemoteTransaction transaction"""

class RemoteTransaction(BaseModel):
    """Transaction: RemoteTransaction"""
    header: RemoteTransactionHeader
    body: RemoteTransactionBody


TxBody = Union[
    SyntheticCreateIdentityBody,
    SyntheticWriteDataBody,
    SyntheticDepositTokensBody,
    SyntheticDepositCreditsBody,
    SyntheticBurnTokensBody,
    SyntheticForwardTransactionBody,
    SystemGenesisBody,
    BlockValidatorAnchorBody,
    DirectoryAnchorBody,
    SystemWriteDataBody,
    CreateIdentityBody,
    CreateTokenAccountBody,
    SendTokensBody,
    CreateDataAccountBody,
    WriteDataBody,
    WriteDataToBody,
    AcmeFaucetBody,
    CreateTokenBody,
    IssueTokensBody,
    BurnTokensBody,
    CreateLiteTokenAccountBody,
    CreateKeyPageBody,
    CreateKeyBookBody,
    AddCreditsBody,
    BurnCreditsBody,
    TransferCreditsBody,
    UpdateKeyPageBody,
    LockAccountBody,
    UpdateAccountAuthBody,
    UpdateKeyBody,
    NetworkMaintenanceBody,
    ActivateProtocolVersionBody,
    RemoteTransactionBody
]

__all__ = [
    "TxBody",
    "SyntheticCreateIdentityHeader",
    "SyntheticWriteDataHeader",
    "SyntheticDepositTokensHeader",
    "SyntheticDepositCreditsHeader",
    "SyntheticBurnTokensHeader",
    "SyntheticForwardTransactionHeader",
    "SystemGenesisHeader",
    "BlockValidatorAnchorHeader",
    "DirectoryAnchorHeader",
    "SystemWriteDataHeader",
    "CreateIdentityHeader",
    "CreateTokenAccountHeader",
    "SendTokensHeader",
    "CreateDataAccountHeader",
    "WriteDataHeader",
    "WriteDataToHeader",
    "AcmeFaucetHeader",
    "CreateTokenHeader",
    "IssueTokensHeader",
    "BurnTokensHeader",
    "CreateLiteTokenAccountHeader",
    "CreateKeyPageHeader",
    "CreateKeyBookHeader",
    "AddCreditsHeader",
    "BurnCreditsHeader",
    "TransferCreditsHeader",
    "UpdateKeyPageHeader",
    "LockAccountHeader",
    "UpdateAccountAuthHeader",
    "UpdateKeyHeader",
    "NetworkMaintenanceHeader",
    "ActivateProtocolVersionHeader",
    "RemoteTransactionHeader",
    "SyntheticCreateIdentity",
    "SyntheticCreateIdentityBody",
    "SyntheticWriteData",
    "SyntheticWriteDataBody",
    "SyntheticDepositTokens",
    "SyntheticDepositTokensBody",
    "SyntheticDepositCredits",
    "SyntheticDepositCreditsBody",
    "SyntheticBurnTokens",
    "SyntheticBurnTokensBody",
    "SyntheticForwardTransaction",
    "SyntheticForwardTransactionBody",
    "SystemGenesis",
    "SystemGenesisBody",
    "BlockValidatorAnchor",
    "BlockValidatorAnchorBody",
    "DirectoryAnchor",
    "DirectoryAnchorBody",
    "SystemWriteData",
    "SystemWriteDataBody",
    "CreateIdentity",
    "CreateIdentityBody",
    "CreateTokenAccount",
    "CreateTokenAccountBody",
    "SendTokens",
    "SendTokensBody",
    "CreateDataAccount",
    "CreateDataAccountBody",
    "WriteData",
    "WriteDataBody",
    "WriteDataTo",
    "WriteDataToBody",
    "AcmeFaucet",
    "AcmeFaucetBody",
    "CreateToken",
    "CreateTokenBody",
    "IssueTokens",
    "IssueTokensBody",
    "BurnTokens",
    "BurnTokensBody",
    "CreateLiteTokenAccount",
    "CreateLiteTokenAccountBody",
    "CreateKeyPage",
    "CreateKeyPageBody",
    "CreateKeyBook",
    "CreateKeyBookBody",
    "AddCredits",
    "AddCreditsBody",
    "BurnCredits",
    "BurnCreditsBody",
    "TransferCredits",
    "TransferCreditsBody",
    "UpdateKeyPage",
    "UpdateKeyPageBody",
    "LockAccount",
    "LockAccountBody",
    "UpdateAccountAuth",
    "UpdateAccountAuthBody",
    "UpdateKey",
    "UpdateKeyBody",
    "NetworkMaintenance",
    "NetworkMaintenanceBody",
    "ActivateProtocolVersion",
    "ActivateProtocolVersionBody",
    "RemoteTransaction",
    "RemoteTransactionBody"
]